name: Build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
          cache: gradle
      - name: Install Arkana
        run: gem install arkana
      - name: Run Arkana
        env:
          PrivateKey: '<BASE64_STRING_OF_PEM_FILE>'
          TeamId: '<APPLE_STORE_TEAM_ID>'
          KeyId: '<MUSIC_SERVICE_KEY_ID>'
        run: arkana -l kotlin
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build
        run: ./gradlew :shared:assembleMusicStreamXCFramework :shared:buildKMMAARs
      - name: Copy XCFramework
        run: cp -a ./shared/build/XCFrameworks/release/MusicStream.xcframework ./package/MusicStream.xcframework
      - name: Sign XCFramework
        env:
          IDENTITY: 'Apple Distribution: Igor Ferreira (V5F865B4U5)'
        run: |
          codesign --timestamp -f -v -s "$IDENTITY" ./package/MusicStream.xcframework/macos-arm64_x86_64/MusicStream.framework
          codesign --timestamp -f -v -s "$IDENTITY" ./package/MusicStream.xcframework/ios-arm64/MusicStream.framework
          codesign --timestamp -f -v -s "$IDENTITY" ./package/MusicStream.xcframework/ios-arm64_x86_64-simulator/MusicStream.framework
          codesign --timestamp -f -v -s "$IDENTITY" ./package/MusicStream.xcframework
      - name: Archive Package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: ./package
      - name: Copy AAR
        run: |
          cp ./shared/build/outputs/aar/shared-release.aar ./aars/musicstream/musicstream.aar
          cp -r ./musickitauth ./aars/musickitauth
          cp -r ./mediaplayback ./aars/mediaplayback
      - name: Archive AARs
        uses: actions/upload-artifact@v4
        with:
          name: aars
          path: ./aars
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
